- suggestions = suggestion_sets.map{|s| s.suggestions}.flatten
-if suggestions.count > 0
  %h2.subtitle=t(:subtitle, :scope => [:views, :suggestion, :index], :count => suggestions.count)
  .irc_help=t('views.suggestion.index.irc_help')

  %hr

  .view_mode.grid_12
    %ul.segmented_controls
      %li#bubble{:class => view_mode == 'bubbles' ? 'selected' : ''}
        %a{href: '/titles?view_mode=bubbles'}=t('views.suggestion.index.view_mode.Bubbles')
      %li#table{:class => view_mode == 'tables' ? 'selected' : ''}
        %a{href: '/titles?view_mode=tables'}=t('views.suggestion.index.view_mode.Tables')
      %li#clusters{:class => view_mode == 'clusters' ? 'selected' : ''}
        %a{href: '/titles?view_mode=clusters'}=t('views.suggestion.index.view_mode.Clusters')
      %li#hacker{:class => view_mode == 'hacker' ? 'selected' : ''}
        %a{href: '/titles?view_mode=hacker'}=t('views.suggestion.index.view_mode.Hacker')

  .clear
  #titles
    - if view_mode == 'bubbles'
      = haml :'suggestion/_bubble_set', :locals => {suggestion_sets: suggestion_sets}
    - elsif view_mode == 'tables'
      = haml :'suggestion/_table_set', :locals => {suggestion_sets: suggestion_sets}
    - elsif view_mode == 'clusters'
      = haml :'suggestion/_cluster_set', :locals => {suggestion_sets: suggestion_sets}
    - else
      = haml :'suggestion/_table_set', :locals => {suggestion_sets: suggestion_sets}
  .clear
-else
  %h2.subtitle.grid_12=t(:subtitle, :scope => [:views, :suggestion, :index], :count => suggestions.count)
  .irc_help=t('views.suggestion.index.irc_help')
